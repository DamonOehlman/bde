#!/usr/bin/env node
const out = require('out');
const nopt = require('nopt');
const fs = require('fs');
const path = require('path');
const bde = require('..');

const knownOpts = {
  'path': [String],
  'port': [Number],
  'suffix': [String],
  'certPath': [path]
};

const shortHands = {
  'p': ['--port'],
  's': ['--suffix']
};

const opts = nopt(knownOpts, shortHands, process.argv, 2);

// iterate through the remaining args, and attempt to assign then to locations
opts.argv.remain.forEach(function(arg) {
  // attempt to parse as an int
  const intArg = parseInt(arg, 10);

  // if the arg is a number, then assign as the port
  if (! isNaN(intArg)) {
    opts.port = intArg;
  } else if (fs.existsSync(path.resolve(arg))) {
    opts.path = path.resolve(arg);
  }
});

bde(opts, function(err, backend) {
  if (err) {
    return out('Unable to start bde: {0}', err);
  }

  out('!{grey}bde {2} server started on port {0} at !{underline,grey}{1}', opts.port, opts.path, bde.version);
  out('!{grey}will browserify files matching: *-{0}.js', opts.suffix);

  // if a backend has been started also, then let the user know
  if (backend) {
    out('!{grey}backend started');
  }
});
